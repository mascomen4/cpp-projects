#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 vertex_uv;
layout(location = 2) in mat4 MVP;

// Output data ; will be interpolated for each fragment.
out vec2 vertex_uv;
out vec2 vertex_img

// Values that stay constant for the whole mesh.


void main(){

	// Output position of the vertex, in clip space : MVP * position
	gl_Position =  MVP * vec4(vertexPosition_modelspace,1);
	vertex_img =  MVP * vec4(vertexPosition_modelspace,1);



}

